{"version":3,"sources":["Components/contactForm/ContactFormStyled.js","Components/contactForm/ContactForm.js","Components/contactList/contactListItem/ContactListItem.js","Components/contactList/ContactListStyled.js","Components/contactList/ContactList.js","redux/contacts/contactsActions.js","Components/filter/FilterStyled.js","Components/filter/Filter.js","Components/AppStyled.js","Components/contactLoader/ContactLoaderStyled.js","Components/contactLoader/ContactLoader.js","redux/contacts/contactsSelectors.js","Components/App.js","redux/contacts/contactsOperations.js","redux/contacts/contactsReducer.js","redux/store.js","index.js"],"names":["ContactFormStyled","styled","div","initialState","name","number","ContactForm","onAddNewContact","useState","contact","setContact","onHandleChange","e","target","value","prev","className","onSubmit","preventDefault","id","type","pattern","title","required","onChange","htmlFor","ContactListItem","onRemoveContactById","onClick","ContactsListStyle","ContactList","contacts","length","map","getContactsRequest","createAction","getContactsSucces","getContactsError","addNewContactRequest","addNewContactSucces","addNewContactError","removeContactByIdRequest","removeContactByIdSucces","removeContactByIdError","filteredContacts","FilterStyled","connect","dispatch","onFilterInput","query","filter","ContactsFilterAndListWrapper","LoaderWrapper","ContactLoader","color","height","width","contactsSelector","state","items","filterSelector","loaderSelector","isLoading","filteredContactsSelector","createSelector","toLowerCase","includes","App","useSelector","useDispatch","useEffect","a","axios","get","response","data","Object","keys","key","error","message","newContact","some","alert","post","addContactOperation","filterValue","delete","removeContactOperation","contactsListReducer","createReducer","_","action","payload","contactsFilterReducer","contactsLoaderReducer","contactsErrorReducer","contactsReducer","combineReducers","store","configureStore","reducer","devTools","process","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.32e26eed.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const ContactFormStyled = styled.div`\r\n  .login-box {\r\n    margin-top: 20px;\r\n    /* top: 50%; */\r\n    /* left: 50%; */\r\n    width: 400px;\r\n    padding: 40px;\r\n    /* transform: translate(-50%, -50%); */\r\n    background: rgba(0, 0, 0, 0.5);\r\n    box-sizing: border-box;\r\n    box-shadow: 0 15px 25px rgba(0, 0, 0, 0.6);\r\n    border-radius: 10px;\r\n  }\r\n\r\n  .login-box h2 {\r\n    margin: 0 0 30px;\r\n    padding: 0;\r\n    color: #fff;\r\n    text-align: center;\r\n  }\r\n\r\n  .login-box .user-box {\r\n    position: relative;\r\n  }\r\n\r\n  .login-box .user-box input {\r\n    width: 100%;\r\n    padding: 10px 0;\r\n    font-size: 16px;\r\n    color: #fff;\r\n    margin-bottom: 30px;\r\n    border: none;\r\n    border-bottom: 1px solid #fff;\r\n    outline: none;\r\n    background: transparent;\r\n  }\r\n\r\n  .login-box .user-box label {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    padding: 10px 0;\r\n    font-size: 16px;\r\n    color: #fff;\r\n    pointer-events: none;\r\n    transition: 0.5s;\r\n  }\r\n\r\n  .login-box .user-box input:focus ~ label,\r\n  .login-box .user-box input:valid ~ label {\r\n    top: -20px;\r\n    left: 0;\r\n    color: #03e9f4;\r\n    font-size: 12px;\r\n  }\r\n\r\n  .login-box form button {\r\n    background: transparent;\r\n    position: relative;\r\n    display: inline-block;\r\n    padding: 10px 20px;\r\n    color: #03e9f4;\r\n    font-size: 16px;\r\n    text-decoration: none;\r\n    text-transform: uppercase;\r\n    overflow: hidden;\r\n    transition: 0.5s;\r\n    margin-top: 40px;\r\n    letter-spacing: 4px;\r\n    border-radius: 5px;\r\n    border-color: #03e9f4;\r\n  }\r\n\r\n  .login-box button:hover {\r\n    background: #03e9f4;\r\n    color: #fff;\r\n    border-radius: 5px solid #03e9f4;\r\n    box-shadow: 0 0 5px #03e9f4, 0 0 25px #03e9f4, 0 0 50px #03e9f4;\r\n  }\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport { ContactFormStyled } from \"./ContactFormStyled\";\r\n\r\nconst initialState = {\r\n  name: \"\",\r\n  number: \"\",\r\n};\r\n\r\nconst ContactForm = ({ onAddNewContact }) => {\r\n  const [contact, setContact] = useState(initialState);\r\n\r\n  const onHandleChange = (e) => {\r\n    const { value, name } = e.target;\r\n    setContact((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handelSubmitForm = (e) => {\r\n    e.preventDefault();\r\n    // contact.id = uuidv4();\r\n\r\n    onAddNewContact(contact);\r\n    setContact({ ...initialState });\r\n  };\r\n\r\n  return (\r\n    <ContactFormStyled>\r\n      <div className=\"login-box\">\r\n        <h2>Phonebook</h2>\r\n        <form onSubmit={handelSubmitForm}>\r\n          <div className=\"user-box\">\r\n            <input\r\n              id=\"contactName\"\r\n              type=\"text\"\r\n              name=\"name\"\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n              onChange={onHandleChange}\r\n              value={contact.name}\r\n            />\r\n            <label htmlFor=\"contactName\">Name</label>\r\n          </div>\r\n          <div className=\"user-box\">\r\n            <input\r\n              className=\"form-control-material\"\r\n              id=\"contactPhone\"\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n              required\r\n              onChange={onHandleChange}\r\n              value={contact.number}\r\n            />\r\n            <label htmlFor=\"contactPhone\">Number</label>\r\n          </div>\r\n          <button type=\"submit\">Add contact</button>\r\n        </form>\r\n      </div>\r\n    </ContactFormStyled>\r\n  );\r\n};\r\n\r\nexport default ContactForm;\r\n","import React from \"react\";\r\n\r\nconst ContactListItem = ({ contact, onRemoveContactById }) => {\r\n  const remove = () => {\r\n    onRemoveContactById(contact.id);\r\n  };\r\n  return (\r\n    <li>\r\n      <p>\r\n        {contact.name}: {contact.number}\r\n      </p>\r\n      <button onClick={remove}>DELETE</button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ContactListItem;\r\n","import styled from \"styled-components\";\r\n\r\nexport const ContactsListStyle = styled.div`\r\n  h2 {\r\n    margin: 10px 0 20px;\r\n    padding: 0;\r\n    color: #fff;\r\n    text-align: center;\r\n  }\r\n  ul {\r\n    padding: 0;\r\n    margin: 0;\r\n  }\r\n  li {\r\n    color: #c9c9c9;\r\n    margin-top: 10px;\r\n    margin-bottom: 10px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    list-style: none;\r\n    align-items: center;\r\n  }\r\n  button {\r\n    height: 25px;\r\n    background: transparent;\r\n    position: relative;\r\n    display: inline-block;\r\n    /* padding: 5px 10px; */\r\n    color: rgba(244, 3, 3, 0.7);\r\n    font-size: 12px;\r\n    text-decoration: none;\r\n    text-transform: uppercase;\r\n    overflow: hidden;\r\n    transition: 0.5s;\r\n    /* margin-top: 40px; */\r\n    letter-spacing: 4px;\r\n    border-radius: 5px;\r\n    border-color: rgba(244, 3, 3, 0.5);\r\n  }\r\n\r\n  button:hover {\r\n    background: rgba(244, 3, 3, 0.5);\r\n    color: #fff;\r\n    border-radius: 5px solid rgba(244, 3, 3, 0.5);\r\n    box-shadow: 0 0 5px rgba(244, 3, 3, 0.5), 0 0 20px rgba(244, 3, 3, 0.5);\r\n  }\r\n  .my-node-enter {\r\n    opacity: 0;\r\n  }\r\n  .my-node-enter-active {\r\n    opacity: 1;\r\n    transition: opacity 2000ms ease-in-out;\r\n  }\r\n  .my-node-exit {\r\n    opacity: 1;\r\n  }\r\n  .my-node-exit-active {\r\n    opacity: 0;\r\n    transition: opacity 2000ms ease-in-out;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport ContactListItem from \"./contactListItem/ContactListItem\";\r\n\r\nimport { ContactsListStyle } from \"./ContactListStyled\";\r\n\r\nconst ContactList = ({ contacts, onRemoveContactById }) => {\r\n  return (\r\n    <>\r\n      <ContactsListStyle>\r\n        <h2>Contacts:</h2>\r\n\r\n        <>\r\n          {contacts.length !== 0 ? (\r\n            <ul>\r\n              {contacts.map((contact) => (\r\n                <ContactListItem\r\n                  key={contact.id}\r\n                  contact={contact}\r\n                  onRemoveContactById={onRemoveContactById}\r\n                />\r\n              ))}\r\n            </ul>\r\n          ) : (\r\n            <p>There is no such contact ;(</p>\r\n          )}\r\n        </>\r\n      </ContactsListStyle>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\n// const getContacts = createAction(\"contacts/getContacts\");\r\n\r\nconst getContactsRequest = createAction(\"contacts/getContactsRequest\");\r\nconst getContactsSucces = createAction(\"contacts/getContactsSucces\");\r\nconst getContactsError = createAction(\"contacts/getContactsError\");\r\n\r\n// const addNewContact = createAction(\"contacts/addContact\");\r\n\r\nconst addNewContactRequest = createAction(\"contacts/addNewContactRequest\");\r\nconst addNewContactSucces = createAction(\"contacts/addNewContactSucces\");\r\nconst addNewContactError = createAction(\"contacts/addNewContactError\");\r\n\r\n// const removeContactById = createAction(\"contacts/removeContact\");\r\n\r\nconst removeContactByIdRequest = createAction(\r\n  \"contacts/removeContactByIdRequest\"\r\n);\r\nconst removeContactByIdSucces = createAction(\r\n  \"contacts/removeContactByIdSucces\"\r\n);\r\nconst removeContactByIdError = createAction(\"contacts/removeContactByIdError\");\r\n\r\nconst filteredContacts = createAction(\"contacts/filteredContacts\");\r\nconst setLoader = createAction(\"contacts/setLoader\");\r\nconst setError = createAction(\"contacts/setError\");\r\n\r\nexport {\r\n  getContactsRequest,\r\n  getContactsSucces,\r\n  getContactsError,\r\n  addNewContactRequest,\r\n  addNewContactSucces,\r\n  addNewContactError,\r\n  removeContactByIdRequest,\r\n  removeContactByIdSucces,\r\n  removeContactByIdError,\r\n  filteredContacts,\r\n  setLoader,\r\n  setError,\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const FilterStyled = styled.div`\r\n  .filter-box {\r\n    position: relative;\r\n  }\r\n\r\n  .filter-box input {\r\n    width: 100%;\r\n    padding: 10px 0;\r\n    font-size: 16px;\r\n    color: #fff;\r\n    margin-bottom: 30px;\r\n    border: none;\r\n    border-bottom: 1px solid #fff;\r\n    outline: none;\r\n    background: transparent;\r\n  }\r\n  .filter-box label {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    padding: 10px 0;\r\n    font-size: 16px;\r\n    color: #fff;\r\n    pointer-events: none;\r\n    transition: 0.5s;\r\n  }\r\n  .filter-box input:focus ~ label {\r\n    top: -20px;\r\n    left: 0;\r\n    color: #03e9f4;\r\n    font-size: 12px;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { filteredContacts } from \"../../redux/contacts/contactsActions\";\r\nimport { FilterStyled } from \"./FilterStyled\";\r\n\r\nconst Filter = ({ onFilterInput, filter }) => {\r\n  const onFilterInputChange = (e) => {\r\n    const { value } = e.target;\r\n\r\n    onFilterInput(value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <FilterStyled>\r\n        <div className=\"filter-box\">\r\n          <input\r\n            value={filter}\r\n            id=\"filterInput\"\r\n            type=\"text\"\r\n            onChange={onFilterInputChange}\r\n          />\r\n          <label htmlFor=\"filterInput\">Find contacts by name or number</label>\r\n        </div>\r\n      </FilterStyled>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onFilterInput: (query) => dispatch(filteredContacts(query)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(Filter);\r\n","import styled from \"styled-components\";\r\n\r\nexport const ContactsFilterAndListWrapper = styled.div`\r\n  margin-top: 20px;\r\n  /* top: 50%; */\r\n  /* left: 50%; */\r\n  width: 400px;\r\n  padding: 40px;\r\n  /* transform: translate(-50%, -50%); */\r\n  background: rgba(0, 0, 0, 0.5);\r\n  box-sizing: border-box;\r\n  box-shadow: 0 15px 25px rgba(0, 0, 0, 0.6);\r\n  border-radius: 10px;\r\n  p {\r\n    color: white;\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const LoaderWrapper = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: rgba(0, 0, 0, 0.8);\r\n  z-index: 1200;\r\n`;\r\n","import React from \"react\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport { LoaderWrapper } from \"./ContactLoaderStyled\";\r\n\r\nconst ContactLoader = () => {\r\n  return (\r\n    <LoaderWrapper>\r\n      <Loader type=\"Grid\" color=\"#03e9f4\" height={100} width={100} />\r\n    </LoaderWrapper>\r\n  );\r\n};\r\n\r\nexport default ContactLoader;\r\n","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nconst contactsSelector = (state) => state.contacts.items;\r\nconst filterSelector = (state) => state.contacts.filter;\r\nconst loaderSelector = (state) => state.contacts.isLoading;\r\n\r\nconst filteredContactsSelector = createSelector(\r\n  [contactsSelector, filterSelector],\r\n  (contact, filter) => {\r\n    return contact.filter(\r\n      (contact) =>\r\n        contact.name.toLowerCase().includes(filter.toLowerCase()) ||\r\n        contact.number.toLowerCase().includes(filter.toLowerCase())\r\n    );\r\n  }\r\n);\r\n\r\nexport {\r\n  contactsSelector,\r\n  filterSelector,\r\n  loaderSelector,\r\n  filteredContactsSelector,\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport ContactForm from \"./contactForm/ContactForm\";\r\nimport ContactList from \"./contactList/ContactList\";\r\nimport Filter from \"./filter/Filter\";\r\nimport { ContactsFilterAndListWrapper } from \"./AppStyled\";\r\nimport {\r\n  addContactOperation,\r\n  getContactsOperation,\r\n  removeContactOperation,\r\n} from \"../redux/contacts/contactsOperations\";\r\nimport ContactLoader from \"./contactLoader/ContactLoader\";\r\nimport {\r\n  contactsSelector,\r\n  filteredContactsSelector,\r\n  filterSelector,\r\n  loaderSelector,\r\n} from \"../redux/contacts/contactsSelectors\";\r\n\r\nconst App = () => {\r\n  const contacts = useSelector(contactsSelector);\r\n  const filter = useSelector(filterSelector);\r\n  const isLoading = useSelector(loaderSelector);\r\n  const filteredContacts = useSelector(filteredContactsSelector);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getContactsOperation());\r\n  }, [dispatch]);\r\n\r\n  const onAddNewContact = (newContact) => {\r\n    if (\r\n      contacts.some((contact) =>\r\n        contact.name.toLowerCase().includes(newContact.name.toLowerCase())\r\n      )\r\n    ) {\r\n      alert(`${newContact.name} is already in contacts.`);\r\n      return;\r\n    }\r\n    dispatch(addContactOperation(newContact));\r\n  };\r\n  const onRemoveContactById = (id) => {\r\n    dispatch(removeContactOperation(id));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isLoading && <ContactLoader />}\r\n\r\n      <ContactForm onAddNewContact={onAddNewContact} />\r\n\r\n      <ContactsFilterAndListWrapper>\r\n        {contacts.length !== 0 ? (\r\n          <>\r\n            <Filter filter={filter} />\r\n            <ContactList\r\n              contacts={filteredContacts}\r\n              filterValue={filter}\r\n              onRemoveContactById={onRemoveContactById}\r\n            />{\" \"}\r\n          </>\r\n        ) : (\r\n          <p>You have no contacts yet ;)</p>\r\n        )}\r\n      </ContactsFilterAndListWrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import axios from \"axios\";\r\nimport {\r\n  getContactsRequest,\r\n  addNewContactSucces,\r\n  addNewContactRequest,\r\n  getContactsSucces,\r\n  addNewContactError,\r\n  getContactsError,\r\n  removeContactByIdRequest,\r\n  removeContactByIdSucces,\r\n  removeContactByIdError,\r\n} from \"./contactsActions\";\r\n\r\nconst getContactsOperation = () => async (dispatch) => {\r\n  dispatch(getContactsRequest());\r\n  try {\r\n    const response = await axios.get(\r\n      \"https://phonebook-2a001-default-rtdb.firebaseio.com/contacts.json\"\r\n    );\r\n    if (response.data) {\r\n      const contacts = Object.keys(response.data).map((key) => ({\r\n        id: key,\r\n        ...response.data[key],\r\n      }));\r\n      dispatch(getContactsSucces(contacts));\r\n    }\r\n  } catch (error) {\r\n    dispatch(getContactsError(error.response.data.error.message));\r\n  }\r\n};\r\n\r\nconst addContactOperation = (newContact) => async (dispatch) => {\r\n  dispatch(addNewContactRequest());\r\n  try {\r\n    const response = await axios.post(\r\n      \"https://phonebook-2a001-default-rtdb.firebaseio.com/contacts.json\",\r\n      newContact\r\n    );\r\n    dispatch(addNewContactSucces({ ...newContact, id: response.data.name }));\r\n  } catch (error) {\r\n    dispatch(addNewContactError(error.response.data.error.message));\r\n  }\r\n};\r\n\r\nconst removeContactOperation = (id) => async (dispatch) => {\r\n  dispatch(removeContactByIdRequest());\r\n  try {\r\n    await axios.delete(\r\n      `https://phonebook-2a001-default-rtdb.firebaseio.com/contacts/${id}.json`\r\n    );\r\n    dispatch(removeContactByIdSucces(id));\r\n  } catch (error) {\r\n    dispatch(removeContactByIdError(error.response.data.error.message));\r\n  }\r\n};\r\n\r\nexport { addContactOperation, getContactsOperation, removeContactOperation };\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport {\r\n  getContactsRequest,\r\n  getContactsSucces,\r\n  getContactsError,\r\n  addNewContactRequest,\r\n  addNewContactSucces,\r\n  addNewContactError,\r\n  filteredContacts,\r\n  removeContactByIdSucces,\r\n  removeContactByIdRequest,\r\n  removeContactByIdError,\r\n} from \"./contactsActions\";\r\n\r\nconst contactsListReducer = createReducer([], {\r\n  [getContactsSucces]: (_, action) => action.payload,\r\n  [addNewContactSucces]: (state, { payload }) => {\r\n    return [...state, payload];\r\n  },\r\n  [removeContactByIdSucces]: (state, { payload }) =>\r\n    state.filter((contact) => contact.id !== payload),\r\n});\r\n\r\nconst contactsFilterReducer = createReducer(\"\", {\r\n  [filteredContacts]: (_, { payload }) => payload,\r\n});\r\n\r\nconst contactsLoaderReducer = createReducer(false, {\r\n  [getContactsRequest]: () => true,\r\n  [getContactsSucces]: () => false,\r\n  [getContactsError]: () => false,\r\n  [addNewContactRequest]: () => true,\r\n  [addNewContactSucces]: () => false,\r\n  [addNewContactError]: () => false,\r\n  [removeContactByIdRequest]: () => true,\r\n  [removeContactByIdSucces]: () => false,\r\n  [removeContactByIdError]: () => false,\r\n});\r\n\r\nconst contactsErrorReducer = createReducer(\"\", {\r\n  [getContactsError]: (_, action) => action.payload,\r\n  [addNewContactError]: (_, action) => action.payload,\r\n  [removeContactByIdError]: (_, action) => action.payload,\r\n});\r\n\r\nconst contactsReducer = combineReducers({\r\n  items: contactsListReducer,\r\n  filter: contactsFilterReducer,\r\n  isLoading: contactsLoaderReducer,\r\n  error: contactsErrorReducer,\r\n});\r\nexport default contactsReducer;\r\n","// import { combineReducers } from \"redux\";\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\n// import { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport contactsReducer from \"./contacts/contactsReducer\";\r\n\r\n// {\r\n//     contacts: {\r\n//           items: [{}, {}, ...],\r\n//           filter: ''\r\n//   }\r\n// }\r\n\r\n// const rootReducer = combineReducers({\r\n//   contacts: contactsReducer,\r\n// });\r\n\r\n// const store = createStore(rootReducer, composeWithDevTools());\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n  },\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./Components/App\";\nimport store from \"./redux/store\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}